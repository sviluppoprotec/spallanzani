//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.2032
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace TheSite.StampaRapportiPDF.Schemixsd {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class DatasetReport : DataSet {
        
        private MP_REPORT_LONGDataTable tableMP_REPORT_LONG;
        
        private Data_Report_RicercaDataTable tableData_Report_Ricerca;
        
        private DownloadFileDataTable tableDownloadFile;
        
        public DatasetReport() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected DatasetReport(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["MP_REPORT_LONG"] != null)) {
                    this.Tables.Add(new MP_REPORT_LONGDataTable(ds.Tables["MP_REPORT_LONG"]));
                }
                if ((ds.Tables["Data_Report_Ricerca"] != null)) {
                    this.Tables.Add(new Data_Report_RicercaDataTable(ds.Tables["Data_Report_Ricerca"]));
                }
                if ((ds.Tables["DownloadFile"] != null)) {
                    this.Tables.Add(new DownloadFileDataTable(ds.Tables["DownloadFile"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MP_REPORT_LONGDataTable MP_REPORT_LONG {
            get {
                return this.tableMP_REPORT_LONG;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Data_Report_RicercaDataTable Data_Report_Ricerca {
            get {
                return this.tableData_Report_Ricerca;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DownloadFileDataTable DownloadFile {
            get {
                return this.tableDownloadFile;
            }
        }
        
        public override DataSet Clone() {
            DatasetReport cln = ((DatasetReport)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["MP_REPORT_LONG"] != null)) {
                this.Tables.Add(new MP_REPORT_LONGDataTable(ds.Tables["MP_REPORT_LONG"]));
            }
            if ((ds.Tables["Data_Report_Ricerca"] != null)) {
                this.Tables.Add(new Data_Report_RicercaDataTable(ds.Tables["Data_Report_Ricerca"]));
            }
            if ((ds.Tables["DownloadFile"] != null)) {
                this.Tables.Add(new DownloadFileDataTable(ds.Tables["DownloadFile"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableMP_REPORT_LONG = ((MP_REPORT_LONGDataTable)(this.Tables["MP_REPORT_LONG"]));
            if ((this.tableMP_REPORT_LONG != null)) {
                this.tableMP_REPORT_LONG.InitVars();
            }
            this.tableData_Report_Ricerca = ((Data_Report_RicercaDataTable)(this.Tables["Data_Report_Ricerca"]));
            if ((this.tableData_Report_Ricerca != null)) {
                this.tableData_Report_Ricerca.InitVars();
            }
            this.tableDownloadFile = ((DownloadFileDataTable)(this.Tables["DownloadFile"]));
            if ((this.tableDownloadFile != null)) {
                this.tableDownloadFile.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "DatasetReport";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/DatasetReport.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableMP_REPORT_LONG = new MP_REPORT_LONGDataTable();
            this.Tables.Add(this.tableMP_REPORT_LONG);
            this.tableData_Report_Ricerca = new Data_Report_RicercaDataTable();
            this.Tables.Add(this.tableData_Report_Ricerca);
            this.tableDownloadFile = new DownloadFileDataTable();
            this.Tables.Add(this.tableDownloadFile);
        }
        
        private bool ShouldSerializeMP_REPORT_LONG() {
            return false;
        }
        
        private bool ShouldSerializeData_Report_Ricerca() {
            return false;
        }
        
        private bool ShouldSerializeDownloadFile() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void MP_REPORT_LONGRowChangeEventHandler(object sender, MP_REPORT_LONGRowChangeEvent e);
        
        public delegate void Data_Report_RicercaRowChangeEventHandler(object sender, Data_Report_RicercaRowChangeEvent e);
        
        public delegate void DownloadFileRowChangeEventHandler(object sender, DownloadFileRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MP_REPORT_LONGDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnWO_ID;
            
            private DataColumn columnWR_ID;
            
            private DataColumn columnEDIFICIO;
            
            private DataColumn columnDATASCADENZA;
            
            private DataColumn columnSTDAPPARATO;
            
            private DataColumn columnEQ_ID;
            
            private DataColumn columnPMP_ID;
            
            private DataColumn columnPROB_TYPE;
            
            private DataColumn columnSTATUS;
            
            private DataColumn columnTR_ID;
            
            private DataColumn columnATTIVITAMP;
            
            private DataColumn columnINTERVAL_TYPE;
            
            private DataColumn columnNUMEROPASSO;
            
            private DataColumn columnPASSO;
            
            private DataColumn columnNOMECOGNOME;
            
            private DataColumn columnDATACOMPLETAMENTO;
            
            private DataColumn columnDITTA;
            
            private DataColumn columnSTANZA;
            
            private DataColumn columndestuso;
            
            internal MP_REPORT_LONGDataTable() : 
                    base("MP_REPORT_LONG") {
                this.InitClass();
            }
            
            internal MP_REPORT_LONGDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn WO_IDColumn {
                get {
                    return this.columnWO_ID;
                }
            }
            
            internal DataColumn WR_IDColumn {
                get {
                    return this.columnWR_ID;
                }
            }
            
            internal DataColumn EDIFICIOColumn {
                get {
                    return this.columnEDIFICIO;
                }
            }
            
            internal DataColumn DATASCADENZAColumn {
                get {
                    return this.columnDATASCADENZA;
                }
            }
            
            internal DataColumn STDAPPARATOColumn {
                get {
                    return this.columnSTDAPPARATO;
                }
            }
            
            internal DataColumn EQ_IDColumn {
                get {
                    return this.columnEQ_ID;
                }
            }
            
            internal DataColumn PMP_IDColumn {
                get {
                    return this.columnPMP_ID;
                }
            }
            
            internal DataColumn PROB_TYPEColumn {
                get {
                    return this.columnPROB_TYPE;
                }
            }
            
            internal DataColumn STATUSColumn {
                get {
                    return this.columnSTATUS;
                }
            }
            
            internal DataColumn TR_IDColumn {
                get {
                    return this.columnTR_ID;
                }
            }
            
            internal DataColumn ATTIVITAMPColumn {
                get {
                    return this.columnATTIVITAMP;
                }
            }
            
            internal DataColumn INTERVAL_TYPEColumn {
                get {
                    return this.columnINTERVAL_TYPE;
                }
            }
            
            internal DataColumn NUMEROPASSOColumn {
                get {
                    return this.columnNUMEROPASSO;
                }
            }
            
            internal DataColumn PASSOColumn {
                get {
                    return this.columnPASSO;
                }
            }
            
            internal DataColumn NOMECOGNOMEColumn {
                get {
                    return this.columnNOMECOGNOME;
                }
            }
            
            internal DataColumn DATACOMPLETAMENTOColumn {
                get {
                    return this.columnDATACOMPLETAMENTO;
                }
            }
            
            internal DataColumn DITTAColumn {
                get {
                    return this.columnDITTA;
                }
            }
            
            internal DataColumn STANZAColumn {
                get {
                    return this.columnSTANZA;
                }
            }
            
            internal DataColumn destusoColumn {
                get {
                    return this.columndestuso;
                }
            }
            
            public MP_REPORT_LONGRow this[int index] {
                get {
                    return ((MP_REPORT_LONGRow)(this.Rows[index]));
                }
            }
            
            public event MP_REPORT_LONGRowChangeEventHandler MP_REPORT_LONGRowChanged;
            
            public event MP_REPORT_LONGRowChangeEventHandler MP_REPORT_LONGRowChanging;
            
            public event MP_REPORT_LONGRowChangeEventHandler MP_REPORT_LONGRowDeleted;
            
            public event MP_REPORT_LONGRowChangeEventHandler MP_REPORT_LONGRowDeleting;
            
            public void AddMP_REPORT_LONGRow(MP_REPORT_LONGRow row) {
                this.Rows.Add(row);
            }
            
            public MP_REPORT_LONGRow AddMP_REPORT_LONGRow(
                        long WO_ID, 
                        long WR_ID, 
                        string EDIFICIO, 
                        string DATASCADENZA, 
                        string STDAPPARATO, 
                        string EQ_ID, 
                        string PMP_ID, 
                        string PROB_TYPE, 
                        string STATUS, 
                        string TR_ID, 
                        string ATTIVITAMP, 
                        string INTERVAL_TYPE, 
                        string NUMEROPASSO, 
                        string PASSO, 
                        string NOMECOGNOME, 
                        string DATACOMPLETAMENTO, 
                        string DITTA, 
                        string STANZA, 
                        string destuso) {
                MP_REPORT_LONGRow rowMP_REPORT_LONGRow = ((MP_REPORT_LONGRow)(this.NewRow()));
                rowMP_REPORT_LONGRow.ItemArray = new object[] {
                        WO_ID,
                        WR_ID,
                        EDIFICIO,
                        DATASCADENZA,
                        STDAPPARATO,
                        EQ_ID,
                        PMP_ID,
                        PROB_TYPE,
                        STATUS,
                        TR_ID,
                        ATTIVITAMP,
                        INTERVAL_TYPE,
                        NUMEROPASSO,
                        PASSO,
                        NOMECOGNOME,
                        DATACOMPLETAMENTO,
                        DITTA,
                        STANZA,
                        destuso};
                this.Rows.Add(rowMP_REPORT_LONGRow);
                return rowMP_REPORT_LONGRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                MP_REPORT_LONGDataTable cln = ((MP_REPORT_LONGDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new MP_REPORT_LONGDataTable();
            }
            
            internal void InitVars() {
                this.columnWO_ID = this.Columns["WO_ID"];
                this.columnWR_ID = this.Columns["WR_ID"];
                this.columnEDIFICIO = this.Columns["EDIFICIO"];
                this.columnDATASCADENZA = this.Columns["DATASCADENZA"];
                this.columnSTDAPPARATO = this.Columns["STDAPPARATO"];
                this.columnEQ_ID = this.Columns["EQ_ID"];
                this.columnPMP_ID = this.Columns["PMP_ID"];
                this.columnPROB_TYPE = this.Columns["PROB_TYPE"];
                this.columnSTATUS = this.Columns["STATUS"];
                this.columnTR_ID = this.Columns["TR_ID"];
                this.columnATTIVITAMP = this.Columns["ATTIVITAMP"];
                this.columnINTERVAL_TYPE = this.Columns["INTERVAL_TYPE"];
                this.columnNUMEROPASSO = this.Columns["NUMEROPASSO"];
                this.columnPASSO = this.Columns["PASSO"];
                this.columnNOMECOGNOME = this.Columns["NOMECOGNOME"];
                this.columnDATACOMPLETAMENTO = this.Columns["DATACOMPLETAMENTO"];
                this.columnDITTA = this.Columns["DITTA"];
                this.columnSTANZA = this.Columns["STANZA"];
                this.columndestuso = this.Columns["destuso"];
            }
            
            private void InitClass() {
                this.columnWO_ID = new DataColumn("WO_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWO_ID);
                this.columnWR_ID = new DataColumn("WR_ID", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnWR_ID);
                this.columnEDIFICIO = new DataColumn("EDIFICIO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEDIFICIO);
                this.columnDATASCADENZA = new DataColumn("DATASCADENZA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATASCADENZA);
                this.columnSTDAPPARATO = new DataColumn("STDAPPARATO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTDAPPARATO);
                this.columnEQ_ID = new DataColumn("EQ_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEQ_ID);
                this.columnPMP_ID = new DataColumn("PMP_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPMP_ID);
                this.columnPROB_TYPE = new DataColumn("PROB_TYPE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPROB_TYPE);
                this.columnSTATUS = new DataColumn("STATUS", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTATUS);
                this.columnTR_ID = new DataColumn("TR_ID", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTR_ID);
                this.columnATTIVITAMP = new DataColumn("ATTIVITAMP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnATTIVITAMP);
                this.columnINTERVAL_TYPE = new DataColumn("INTERVAL_TYPE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnINTERVAL_TYPE);
                this.columnNUMEROPASSO = new DataColumn("NUMEROPASSO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNUMEROPASSO);
                this.columnPASSO = new DataColumn("PASSO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnPASSO);
                this.columnNOMECOGNOME = new DataColumn("NOMECOGNOME", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOMECOGNOME);
                this.columnDATACOMPLETAMENTO = new DataColumn("DATACOMPLETAMENTO", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATACOMPLETAMENTO);
                this.columnDITTA = new DataColumn("DITTA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDITTA);
                this.columnSTANZA = new DataColumn("STANZA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSTANZA);
                this.columndestuso = new DataColumn("destuso", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndestuso);
                this.columnWR_ID.AllowDBNull = false;
                this.columnSTATUS.AllowDBNull = false;
                this.columnINTERVAL_TYPE.AllowDBNull = false;
            }
            
            public MP_REPORT_LONGRow NewMP_REPORT_LONGRow() {
                return ((MP_REPORT_LONGRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new MP_REPORT_LONGRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(MP_REPORT_LONGRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MP_REPORT_LONGRowChanged != null)) {
                    this.MP_REPORT_LONGRowChanged(this, new MP_REPORT_LONGRowChangeEvent(((MP_REPORT_LONGRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MP_REPORT_LONGRowChanging != null)) {
                    this.MP_REPORT_LONGRowChanging(this, new MP_REPORT_LONGRowChangeEvent(((MP_REPORT_LONGRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MP_REPORT_LONGRowDeleted != null)) {
                    this.MP_REPORT_LONGRowDeleted(this, new MP_REPORT_LONGRowChangeEvent(((MP_REPORT_LONGRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MP_REPORT_LONGRowDeleting != null)) {
                    this.MP_REPORT_LONGRowDeleting(this, new MP_REPORT_LONGRowChangeEvent(((MP_REPORT_LONGRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveMP_REPORT_LONGRow(MP_REPORT_LONGRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MP_REPORT_LONGRow : DataRow {
            
            private MP_REPORT_LONGDataTable tableMP_REPORT_LONG;
            
            internal MP_REPORT_LONGRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableMP_REPORT_LONG = ((MP_REPORT_LONGDataTable)(this.Table));
            }
            
            public long WO_ID {
                get {
                    try {
                        return ((long)(this[this.tableMP_REPORT_LONG.WO_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.WO_IDColumn] = value;
                }
            }
            
            public long WR_ID {
                get {
                    return ((long)(this[this.tableMP_REPORT_LONG.WR_IDColumn]));
                }
                set {
                    this[this.tableMP_REPORT_LONG.WR_IDColumn] = value;
                }
            }
            
            public string EDIFICIO {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.EDIFICIOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.EDIFICIOColumn] = value;
                }
            }
            
            public string DATASCADENZA {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.DATASCADENZAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.DATASCADENZAColumn] = value;
                }
            }
            
            public string STDAPPARATO {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.STDAPPARATOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.STDAPPARATOColumn] = value;
                }
            }
            
            public string EQ_ID {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.EQ_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.EQ_IDColumn] = value;
                }
            }
            
            public string PMP_ID {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.PMP_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.PMP_IDColumn] = value;
                }
            }
            
            public string PROB_TYPE {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.PROB_TYPEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.PROB_TYPEColumn] = value;
                }
            }
            
            public string STATUS {
                get {
                    return ((string)(this[this.tableMP_REPORT_LONG.STATUSColumn]));
                }
                set {
                    this[this.tableMP_REPORT_LONG.STATUSColumn] = value;
                }
            }
            
            public string TR_ID {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.TR_IDColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.TR_IDColumn] = value;
                }
            }
            
            public string ATTIVITAMP {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.ATTIVITAMPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.ATTIVITAMPColumn] = value;
                }
            }
            
            public string INTERVAL_TYPE {
                get {
                    return ((string)(this[this.tableMP_REPORT_LONG.INTERVAL_TYPEColumn]));
                }
                set {
                    this[this.tableMP_REPORT_LONG.INTERVAL_TYPEColumn] = value;
                }
            }
            
            public string NUMEROPASSO {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.NUMEROPASSOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.NUMEROPASSOColumn] = value;
                }
            }
            
            public string PASSO {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.PASSOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.PASSOColumn] = value;
                }
            }
            
            public string NOMECOGNOME {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.NOMECOGNOMEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.NOMECOGNOMEColumn] = value;
                }
            }
            
            public string DATACOMPLETAMENTO {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.DATACOMPLETAMENTOColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.DATACOMPLETAMENTOColumn] = value;
                }
            }
            
            public string DITTA {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.DITTAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.DITTAColumn] = value;
                }
            }
            
            public string STANZA {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.STANZAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.STANZAColumn] = value;
                }
            }
            
            public string destuso {
                get {
                    try {
                        return ((string)(this[this.tableMP_REPORT_LONG.destusoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMP_REPORT_LONG.destusoColumn] = value;
                }
            }
            
            public bool IsWO_IDNull() {
                return this.IsNull(this.tableMP_REPORT_LONG.WO_IDColumn);
            }
            
            public void SetWO_IDNull() {
                this[this.tableMP_REPORT_LONG.WO_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsEDIFICIONull() {
                return this.IsNull(this.tableMP_REPORT_LONG.EDIFICIOColumn);
            }
            
            public void SetEDIFICIONull() {
                this[this.tableMP_REPORT_LONG.EDIFICIOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATASCADENZANull() {
                return this.IsNull(this.tableMP_REPORT_LONG.DATASCADENZAColumn);
            }
            
            public void SetDATASCADENZANull() {
                this[this.tableMP_REPORT_LONG.DATASCADENZAColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTDAPPARATONull() {
                return this.IsNull(this.tableMP_REPORT_LONG.STDAPPARATOColumn);
            }
            
            public void SetSTDAPPARATONull() {
                this[this.tableMP_REPORT_LONG.STDAPPARATOColumn] = System.Convert.DBNull;
            }
            
            public bool IsEQ_IDNull() {
                return this.IsNull(this.tableMP_REPORT_LONG.EQ_IDColumn);
            }
            
            public void SetEQ_IDNull() {
                this[this.tableMP_REPORT_LONG.EQ_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPMP_IDNull() {
                return this.IsNull(this.tableMP_REPORT_LONG.PMP_IDColumn);
            }
            
            public void SetPMP_IDNull() {
                this[this.tableMP_REPORT_LONG.PMP_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsPROB_TYPENull() {
                return this.IsNull(this.tableMP_REPORT_LONG.PROB_TYPEColumn);
            }
            
            public void SetPROB_TYPENull() {
                this[this.tableMP_REPORT_LONG.PROB_TYPEColumn] = System.Convert.DBNull;
            }
            
            public bool IsTR_IDNull() {
                return this.IsNull(this.tableMP_REPORT_LONG.TR_IDColumn);
            }
            
            public void SetTR_IDNull() {
                this[this.tableMP_REPORT_LONG.TR_IDColumn] = System.Convert.DBNull;
            }
            
            public bool IsATTIVITAMPNull() {
                return this.IsNull(this.tableMP_REPORT_LONG.ATTIVITAMPColumn);
            }
            
            public void SetATTIVITAMPNull() {
                this[this.tableMP_REPORT_LONG.ATTIVITAMPColumn] = System.Convert.DBNull;
            }
            
            public bool IsNUMEROPASSONull() {
                return this.IsNull(this.tableMP_REPORT_LONG.NUMEROPASSOColumn);
            }
            
            public void SetNUMEROPASSONull() {
                this[this.tableMP_REPORT_LONG.NUMEROPASSOColumn] = System.Convert.DBNull;
            }
            
            public bool IsPASSONull() {
                return this.IsNull(this.tableMP_REPORT_LONG.PASSOColumn);
            }
            
            public void SetPASSONull() {
                this[this.tableMP_REPORT_LONG.PASSOColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOMECOGNOMENull() {
                return this.IsNull(this.tableMP_REPORT_LONG.NOMECOGNOMEColumn);
            }
            
            public void SetNOMECOGNOMENull() {
                this[this.tableMP_REPORT_LONG.NOMECOGNOMEColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATACOMPLETAMENTONull() {
                return this.IsNull(this.tableMP_REPORT_LONG.DATACOMPLETAMENTOColumn);
            }
            
            public void SetDATACOMPLETAMENTONull() {
                this[this.tableMP_REPORT_LONG.DATACOMPLETAMENTOColumn] = System.Convert.DBNull;
            }
            
            public bool IsDITTANull() {
                return this.IsNull(this.tableMP_REPORT_LONG.DITTAColumn);
            }
            
            public void SetDITTANull() {
                this[this.tableMP_REPORT_LONG.DITTAColumn] = System.Convert.DBNull;
            }
            
            public bool IsSTANZANull() {
                return this.IsNull(this.tableMP_REPORT_LONG.STANZAColumn);
            }
            
            public void SetSTANZANull() {
                this[this.tableMP_REPORT_LONG.STANZAColumn] = System.Convert.DBNull;
            }
            
            public bool IsdestusoNull() {
                return this.IsNull(this.tableMP_REPORT_LONG.destusoColumn);
            }
            
            public void SetdestusoNull() {
                this[this.tableMP_REPORT_LONG.destusoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MP_REPORT_LONGRowChangeEvent : EventArgs {
            
            private MP_REPORT_LONGRow eventRow;
            
            private DataRowAction eventAction;
            
            public MP_REPORT_LONGRowChangeEvent(MP_REPORT_LONGRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public MP_REPORT_LONGRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Data_Report_RicercaDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnwo_id;
            
            private DataColumn columnqty_open_wr;
            
            private DataColumn columncity_id;
            
            private DataColumn columnbl_id;
            
            private DataColumn columnindirizzo;
            
            private DataColumn columncontact_name;
            
            private DataColumn columnanno;
            
            private DataColumn columnmese;
            
            private DataColumn columnmesenum;
            
            private DataColumn columnprob_type;
            
            private DataColumn columnaddetto_id;
            
            private DataColumn columnnomecognome;
            
            private DataColumn columndata_completamento;
            
            private DataColumn columnmesecompletamento;
            
            private DataColumn columnmesenumcompletamento;
            
            internal Data_Report_RicercaDataTable() : 
                    base("Data_Report_Ricerca") {
                this.InitClass();
            }
            
            internal Data_Report_RicercaDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn wo_idColumn {
                get {
                    return this.columnwo_id;
                }
            }
            
            internal DataColumn qty_open_wrColumn {
                get {
                    return this.columnqty_open_wr;
                }
            }
            
            internal DataColumn city_idColumn {
                get {
                    return this.columncity_id;
                }
            }
            
            internal DataColumn bl_idColumn {
                get {
                    return this.columnbl_id;
                }
            }
            
            internal DataColumn indirizzoColumn {
                get {
                    return this.columnindirizzo;
                }
            }
            
            internal DataColumn contact_nameColumn {
                get {
                    return this.columncontact_name;
                }
            }
            
            internal DataColumn annoColumn {
                get {
                    return this.columnanno;
                }
            }
            
            internal DataColumn meseColumn {
                get {
                    return this.columnmese;
                }
            }
            
            internal DataColumn mesenumColumn {
                get {
                    return this.columnmesenum;
                }
            }
            
            internal DataColumn prob_typeColumn {
                get {
                    return this.columnprob_type;
                }
            }
            
            internal DataColumn addetto_idColumn {
                get {
                    return this.columnaddetto_id;
                }
            }
            
            internal DataColumn nomecognomeColumn {
                get {
                    return this.columnnomecognome;
                }
            }
            
            internal DataColumn data_completamentoColumn {
                get {
                    return this.columndata_completamento;
                }
            }
            
            internal DataColumn mesecompletamentoColumn {
                get {
                    return this.columnmesecompletamento;
                }
            }
            
            internal DataColumn mesenumcompletamentoColumn {
                get {
                    return this.columnmesenumcompletamento;
                }
            }
            
            public Data_Report_RicercaRow this[int index] {
                get {
                    return ((Data_Report_RicercaRow)(this.Rows[index]));
                }
            }
            
            public event Data_Report_RicercaRowChangeEventHandler Data_Report_RicercaRowChanged;
            
            public event Data_Report_RicercaRowChangeEventHandler Data_Report_RicercaRowChanging;
            
            public event Data_Report_RicercaRowChangeEventHandler Data_Report_RicercaRowDeleted;
            
            public event Data_Report_RicercaRowChangeEventHandler Data_Report_RicercaRowDeleting;
            
            public void AddData_Report_RicercaRow(Data_Report_RicercaRow row) {
                this.Rows.Add(row);
            }
            
            public Data_Report_RicercaRow AddData_Report_RicercaRow(long wo_id, long qty_open_wr, string city_id, string bl_id, string indirizzo, string contact_name, string anno, string mese, string mesenum, string prob_type, long addetto_id, string nomecognome, System.DateTime data_completamento, string mesecompletamento, string mesenumcompletamento) {
                Data_Report_RicercaRow rowData_Report_RicercaRow = ((Data_Report_RicercaRow)(this.NewRow()));
                rowData_Report_RicercaRow.ItemArray = new object[] {
                        wo_id,
                        qty_open_wr,
                        city_id,
                        bl_id,
                        indirizzo,
                        contact_name,
                        anno,
                        mese,
                        mesenum,
                        prob_type,
                        addetto_id,
                        nomecognome,
                        data_completamento,
                        mesecompletamento,
                        mesenumcompletamento};
                this.Rows.Add(rowData_Report_RicercaRow);
                return rowData_Report_RicercaRow;
            }
            
            public Data_Report_RicercaRow FindBywo_id(long wo_id) {
                return ((Data_Report_RicercaRow)(this.Rows.Find(new object[] {
                            wo_id})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                Data_Report_RicercaDataTable cln = ((Data_Report_RicercaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new Data_Report_RicercaDataTable();
            }
            
            internal void InitVars() {
                this.columnwo_id = this.Columns["wo_id"];
                this.columnqty_open_wr = this.Columns["qty_open_wr"];
                this.columncity_id = this.Columns["city_id"];
                this.columnbl_id = this.Columns["bl_id"];
                this.columnindirizzo = this.Columns["indirizzo"];
                this.columncontact_name = this.Columns["contact_name"];
                this.columnanno = this.Columns["anno"];
                this.columnmese = this.Columns["mese"];
                this.columnmesenum = this.Columns["mesenum"];
                this.columnprob_type = this.Columns["prob_type"];
                this.columnaddetto_id = this.Columns["addetto_id"];
                this.columnnomecognome = this.Columns["nomecognome"];
                this.columndata_completamento = this.Columns["data_completamento"];
                this.columnmesecompletamento = this.Columns["mesecompletamento"];
                this.columnmesenumcompletamento = this.Columns["mesenumcompletamento"];
            }
            
            private void InitClass() {
                this.columnwo_id = new DataColumn("wo_id", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnwo_id);
                this.columnqty_open_wr = new DataColumn("qty_open_wr", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnqty_open_wr);
                this.columncity_id = new DataColumn("city_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncity_id);
                this.columnbl_id = new DataColumn("bl_id", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnbl_id);
                this.columnindirizzo = new DataColumn("indirizzo", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnindirizzo);
                this.columncontact_name = new DataColumn("contact_name", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncontact_name);
                this.columnanno = new DataColumn("anno", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnanno);
                this.columnmese = new DataColumn("mese", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnmese);
                this.columnmesenum = new DataColumn("mesenum", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnmesenum);
                this.columnprob_type = new DataColumn("prob_type", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnprob_type);
                this.columnaddetto_id = new DataColumn("addetto_id", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnaddetto_id);
                this.columnnomecognome = new DataColumn("nomecognome", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnomecognome);
                this.columndata_completamento = new DataColumn("data_completamento", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndata_completamento);
                this.columnmesecompletamento = new DataColumn("mesecompletamento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnmesecompletamento);
                this.columnmesenumcompletamento = new DataColumn("mesenumcompletamento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnmesenumcompletamento);
                this.Constraints.Add(new UniqueConstraint("DatasetReportKey1", new DataColumn[] {
                                this.columnwo_id}, true));
                this.columnwo_id.AllowDBNull = false;
                this.columnwo_id.Unique = true;
            }
            
            public Data_Report_RicercaRow NewData_Report_RicercaRow() {
                return ((Data_Report_RicercaRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new Data_Report_RicercaRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(Data_Report_RicercaRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Data_Report_RicercaRowChanged != null)) {
                    this.Data_Report_RicercaRowChanged(this, new Data_Report_RicercaRowChangeEvent(((Data_Report_RicercaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Data_Report_RicercaRowChanging != null)) {
                    this.Data_Report_RicercaRowChanging(this, new Data_Report_RicercaRowChangeEvent(((Data_Report_RicercaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Data_Report_RicercaRowDeleted != null)) {
                    this.Data_Report_RicercaRowDeleted(this, new Data_Report_RicercaRowChangeEvent(((Data_Report_RicercaRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Data_Report_RicercaRowDeleting != null)) {
                    this.Data_Report_RicercaRowDeleting(this, new Data_Report_RicercaRowChangeEvent(((Data_Report_RicercaRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveData_Report_RicercaRow(Data_Report_RicercaRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Data_Report_RicercaRow : DataRow {
            
            private Data_Report_RicercaDataTable tableData_Report_Ricerca;
            
            internal Data_Report_RicercaRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableData_Report_Ricerca = ((Data_Report_RicercaDataTable)(this.Table));
            }
            
            public long wo_id {
                get {
                    return ((long)(this[this.tableData_Report_Ricerca.wo_idColumn]));
                }
                set {
                    this[this.tableData_Report_Ricerca.wo_idColumn] = value;
                }
            }
            
            public long qty_open_wr {
                get {
                    try {
                        return ((long)(this[this.tableData_Report_Ricerca.qty_open_wrColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.qty_open_wrColumn] = value;
                }
            }
            
            public string city_id {
                get {
                    try {
                        return ((string)(this[this.tableData_Report_Ricerca.city_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.city_idColumn] = value;
                }
            }
            
            public string bl_id {
                get {
                    try {
                        return ((string)(this[this.tableData_Report_Ricerca.bl_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.bl_idColumn] = value;
                }
            }
            
            public string indirizzo {
                get {
                    try {
                        return ((string)(this[this.tableData_Report_Ricerca.indirizzoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.indirizzoColumn] = value;
                }
            }
            
            public string contact_name {
                get {
                    try {
                        return ((string)(this[this.tableData_Report_Ricerca.contact_nameColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.contact_nameColumn] = value;
                }
            }
            
            public string anno {
                get {
                    try {
                        return ((string)(this[this.tableData_Report_Ricerca.annoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.annoColumn] = value;
                }
            }
            
            public string mese {
                get {
                    try {
                        return ((string)(this[this.tableData_Report_Ricerca.meseColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.meseColumn] = value;
                }
            }
            
            public string mesenum {
                get {
                    try {
                        return ((string)(this[this.tableData_Report_Ricerca.mesenumColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.mesenumColumn] = value;
                }
            }
            
            public string prob_type {
                get {
                    try {
                        return ((string)(this[this.tableData_Report_Ricerca.prob_typeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.prob_typeColumn] = value;
                }
            }
            
            public long addetto_id {
                get {
                    try {
                        return ((long)(this[this.tableData_Report_Ricerca.addetto_idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.addetto_idColumn] = value;
                }
            }
            
            public string nomecognome {
                get {
                    try {
                        return ((string)(this[this.tableData_Report_Ricerca.nomecognomeColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.nomecognomeColumn] = value;
                }
            }
            
            public System.DateTime data_completamento {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableData_Report_Ricerca.data_completamentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.data_completamentoColumn] = value;
                }
            }
            
            public string mesecompletamento {
                get {
                    try {
                        return ((string)(this[this.tableData_Report_Ricerca.mesecompletamentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.mesecompletamentoColumn] = value;
                }
            }
            
            public string mesenumcompletamento {
                get {
                    try {
                        return ((string)(this[this.tableData_Report_Ricerca.mesenumcompletamentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableData_Report_Ricerca.mesenumcompletamentoColumn] = value;
                }
            }
            
            public bool Isqty_open_wrNull() {
                return this.IsNull(this.tableData_Report_Ricerca.qty_open_wrColumn);
            }
            
            public void Setqty_open_wrNull() {
                this[this.tableData_Report_Ricerca.qty_open_wrColumn] = System.Convert.DBNull;
            }
            
            public bool Iscity_idNull() {
                return this.IsNull(this.tableData_Report_Ricerca.city_idColumn);
            }
            
            public void Setcity_idNull() {
                this[this.tableData_Report_Ricerca.city_idColumn] = System.Convert.DBNull;
            }
            
            public bool Isbl_idNull() {
                return this.IsNull(this.tableData_Report_Ricerca.bl_idColumn);
            }
            
            public void Setbl_idNull() {
                this[this.tableData_Report_Ricerca.bl_idColumn] = System.Convert.DBNull;
            }
            
            public bool IsindirizzoNull() {
                return this.IsNull(this.tableData_Report_Ricerca.indirizzoColumn);
            }
            
            public void SetindirizzoNull() {
                this[this.tableData_Report_Ricerca.indirizzoColumn] = System.Convert.DBNull;
            }
            
            public bool Iscontact_nameNull() {
                return this.IsNull(this.tableData_Report_Ricerca.contact_nameColumn);
            }
            
            public void Setcontact_nameNull() {
                this[this.tableData_Report_Ricerca.contact_nameColumn] = System.Convert.DBNull;
            }
            
            public bool IsannoNull() {
                return this.IsNull(this.tableData_Report_Ricerca.annoColumn);
            }
            
            public void SetannoNull() {
                this[this.tableData_Report_Ricerca.annoColumn] = System.Convert.DBNull;
            }
            
            public bool IsmeseNull() {
                return this.IsNull(this.tableData_Report_Ricerca.meseColumn);
            }
            
            public void SetmeseNull() {
                this[this.tableData_Report_Ricerca.meseColumn] = System.Convert.DBNull;
            }
            
            public bool IsmesenumNull() {
                return this.IsNull(this.tableData_Report_Ricerca.mesenumColumn);
            }
            
            public void SetmesenumNull() {
                this[this.tableData_Report_Ricerca.mesenumColumn] = System.Convert.DBNull;
            }
            
            public bool Isprob_typeNull() {
                return this.IsNull(this.tableData_Report_Ricerca.prob_typeColumn);
            }
            
            public void Setprob_typeNull() {
                this[this.tableData_Report_Ricerca.prob_typeColumn] = System.Convert.DBNull;
            }
            
            public bool Isaddetto_idNull() {
                return this.IsNull(this.tableData_Report_Ricerca.addetto_idColumn);
            }
            
            public void Setaddetto_idNull() {
                this[this.tableData_Report_Ricerca.addetto_idColumn] = System.Convert.DBNull;
            }
            
            public bool IsnomecognomeNull() {
                return this.IsNull(this.tableData_Report_Ricerca.nomecognomeColumn);
            }
            
            public void SetnomecognomeNull() {
                this[this.tableData_Report_Ricerca.nomecognomeColumn] = System.Convert.DBNull;
            }
            
            public bool Isdata_completamentoNull() {
                return this.IsNull(this.tableData_Report_Ricerca.data_completamentoColumn);
            }
            
            public void Setdata_completamentoNull() {
                this[this.tableData_Report_Ricerca.data_completamentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsmesecompletamentoNull() {
                return this.IsNull(this.tableData_Report_Ricerca.mesecompletamentoColumn);
            }
            
            public void SetmesecompletamentoNull() {
                this[this.tableData_Report_Ricerca.mesecompletamentoColumn] = System.Convert.DBNull;
            }
            
            public bool IsmesenumcompletamentoNull() {
                return this.IsNull(this.tableData_Report_Ricerca.mesenumcompletamentoColumn);
            }
            
            public void SetmesenumcompletamentoNull() {
                this[this.tableData_Report_Ricerca.mesenumcompletamentoColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class Data_Report_RicercaRowChangeEvent : EventArgs {
            
            private Data_Report_RicercaRow eventRow;
            
            private DataRowAction eventAction;
            
            public Data_Report_RicercaRowChangeEvent(Data_Report_RicercaRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public Data_Report_RicercaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DownloadFileDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnnome_file;
            
            private DataColumn columndata_created;
            
            private DataColumn columndata_assegnazione_init;
            
            private DataColumn columndata_assegnazione_end;
            
            private DataColumn columndata_completamento_end;
            
            private DataColumn columncomune;
            
            private DataColumn columnditta;
            
            private DataColumn columncategoria;
            
            private DataColumn columnaddetto;
            
            private DataColumn columnsolo_non_completate;
            
            private DataColumn columnsolo_completate;
            
            private DataColumn columndata_di_completamento;
            
            private DataColumn columndimensione_file;
            
            private DataColumn columnedificio;
            
            private DataColumn columndata_completamento_init;
            
            private DataColumn columnintervallo_odl_selezionati;
            
            private DataColumn columntipologia_report;
            
            private DataColumn columnid;
            
            private DataColumn columndimensione_file_zip;
            
            private DataColumn columnDATA_ASS_IN_OUT;
            
            private DataColumn columnDIMENSIONEFILE_PDF_ZIP;
            
            private DataColumn columnCOMPLETATE;
            
            internal DownloadFileDataTable() : 
                    base("DownloadFile") {
                this.InitClass();
            }
            
            internal DownloadFileDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn nome_fileColumn {
                get {
                    return this.columnnome_file;
                }
            }
            
            internal DataColumn data_createdColumn {
                get {
                    return this.columndata_created;
                }
            }
            
            internal DataColumn data_assegnazione_initColumn {
                get {
                    return this.columndata_assegnazione_init;
                }
            }
            
            internal DataColumn data_assegnazione_endColumn {
                get {
                    return this.columndata_assegnazione_end;
                }
            }
            
            internal DataColumn data_completamento_endColumn {
                get {
                    return this.columndata_completamento_end;
                }
            }
            
            internal DataColumn comuneColumn {
                get {
                    return this.columncomune;
                }
            }
            
            internal DataColumn dittaColumn {
                get {
                    return this.columnditta;
                }
            }
            
            internal DataColumn categoriaColumn {
                get {
                    return this.columncategoria;
                }
            }
            
            internal DataColumn addettoColumn {
                get {
                    return this.columnaddetto;
                }
            }
            
            internal DataColumn solo_non_completateColumn {
                get {
                    return this.columnsolo_non_completate;
                }
            }
            
            internal DataColumn solo_completateColumn {
                get {
                    return this.columnsolo_completate;
                }
            }
            
            internal DataColumn data_di_completamentoColumn {
                get {
                    return this.columndata_di_completamento;
                }
            }
            
            internal DataColumn dimensione_fileColumn {
                get {
                    return this.columndimensione_file;
                }
            }
            
            internal DataColumn edificioColumn {
                get {
                    return this.columnedificio;
                }
            }
            
            internal DataColumn data_completamento_initColumn {
                get {
                    return this.columndata_completamento_init;
                }
            }
            
            internal DataColumn intervallo_odl_selezionatiColumn {
                get {
                    return this.columnintervallo_odl_selezionati;
                }
            }
            
            internal DataColumn tipologia_reportColumn {
                get {
                    return this.columntipologia_report;
                }
            }
            
            internal DataColumn idColumn {
                get {
                    return this.columnid;
                }
            }
            
            internal DataColumn dimensione_file_zipColumn {
                get {
                    return this.columndimensione_file_zip;
                }
            }
            
            internal DataColumn DATA_ASS_IN_OUTColumn {
                get {
                    return this.columnDATA_ASS_IN_OUT;
                }
            }
            
            internal DataColumn DIMENSIONEFILE_PDF_ZIPColumn {
                get {
                    return this.columnDIMENSIONEFILE_PDF_ZIP;
                }
            }
            
            internal DataColumn COMPLETATEColumn {
                get {
                    return this.columnCOMPLETATE;
                }
            }
            
            public DownloadFileRow this[int index] {
                get {
                    return ((DownloadFileRow)(this.Rows[index]));
                }
            }
            
            public event DownloadFileRowChangeEventHandler DownloadFileRowChanged;
            
            public event DownloadFileRowChangeEventHandler DownloadFileRowChanging;
            
            public event DownloadFileRowChangeEventHandler DownloadFileRowDeleted;
            
            public event DownloadFileRowChangeEventHandler DownloadFileRowDeleting;
            
            public void AddDownloadFileRow(DownloadFileRow row) {
                this.Rows.Add(row);
            }
            
            public DownloadFileRow AddDownloadFileRow(
                        string nome_file, 
                        System.DateTime data_created, 
                        System.DateTime data_assegnazione_init, 
                        System.DateTime data_assegnazione_end, 
                        System.DateTime data_completamento_end, 
                        string comune, 
                        string ditta, 
                        string categoria, 
                        string addetto, 
                        string solo_non_completate, 
                        string solo_completate, 
                        string data_di_completamento, 
                        string dimensione_file, 
                        string edificio, 
                        System.DateTime data_completamento_init, 
                        string intervallo_odl_selezionati, 
                        string tipologia_report, 
                        long id, 
                        string dimensione_file_zip, 
                        string DATA_ASS_IN_OUT, 
                        string DIMENSIONEFILE_PDF_ZIP, 
                        string COMPLETATE) {
                DownloadFileRow rowDownloadFileRow = ((DownloadFileRow)(this.NewRow()));
                rowDownloadFileRow.ItemArray = new object[] {
                        nome_file,
                        data_created,
                        data_assegnazione_init,
                        data_assegnazione_end,
                        data_completamento_end,
                        comune,
                        ditta,
                        categoria,
                        addetto,
                        solo_non_completate,
                        solo_completate,
                        data_di_completamento,
                        dimensione_file,
                        edificio,
                        data_completamento_init,
                        intervallo_odl_selezionati,
                        tipologia_report,
                        id,
                        dimensione_file_zip,
                        DATA_ASS_IN_OUT,
                        DIMENSIONEFILE_PDF_ZIP,
                        COMPLETATE};
                this.Rows.Add(rowDownloadFileRow);
                return rowDownloadFileRow;
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                DownloadFileDataTable cln = ((DownloadFileDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new DownloadFileDataTable();
            }
            
            internal void InitVars() {
                this.columnnome_file = this.Columns["nome_file"];
                this.columndata_created = this.Columns["data_created"];
                this.columndata_assegnazione_init = this.Columns["data_assegnazione_init"];
                this.columndata_assegnazione_end = this.Columns["data_assegnazione_end"];
                this.columndata_completamento_end = this.Columns["data_completamento_end"];
                this.columncomune = this.Columns["comune"];
                this.columnditta = this.Columns["ditta"];
                this.columncategoria = this.Columns["categoria"];
                this.columnaddetto = this.Columns["addetto"];
                this.columnsolo_non_completate = this.Columns["solo_non_completate"];
                this.columnsolo_completate = this.Columns["solo_completate"];
                this.columndata_di_completamento = this.Columns["data_di_completamento"];
                this.columndimensione_file = this.Columns["dimensione_file"];
                this.columnedificio = this.Columns["edificio"];
                this.columndata_completamento_init = this.Columns["data_completamento_init"];
                this.columnintervallo_odl_selezionati = this.Columns["intervallo_odl_selezionati"];
                this.columntipologia_report = this.Columns["tipologia_report"];
                this.columnid = this.Columns["id"];
                this.columndimensione_file_zip = this.Columns["dimensione_file_zip"];
                this.columnDATA_ASS_IN_OUT = this.Columns["DATA_ASS_IN_OUT"];
                this.columnDIMENSIONEFILE_PDF_ZIP = this.Columns["DIMENSIONEFILE_PDF_ZIP"];
                this.columnCOMPLETATE = this.Columns["COMPLETATE"];
            }
            
            private void InitClass() {
                this.columnnome_file = new DataColumn("nome_file", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnnome_file);
                this.columndata_created = new DataColumn("data_created", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndata_created);
                this.columndata_assegnazione_init = new DataColumn("data_assegnazione_init", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndata_assegnazione_init);
                this.columndata_assegnazione_end = new DataColumn("data_assegnazione_end", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndata_assegnazione_end);
                this.columndata_completamento_end = new DataColumn("data_completamento_end", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndata_completamento_end);
                this.columncomune = new DataColumn("comune", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncomune);
                this.columnditta = new DataColumn("ditta", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnditta);
                this.columncategoria = new DataColumn("categoria", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columncategoria);
                this.columnaddetto = new DataColumn("addetto", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnaddetto);
                this.columnsolo_non_completate = new DataColumn("solo_non_completate", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsolo_non_completate);
                this.columnsolo_completate = new DataColumn("solo_completate", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnsolo_completate);
                this.columndata_di_completamento = new DataColumn("data_di_completamento", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndata_di_completamento);
                this.columndimensione_file = new DataColumn("dimensione_file", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndimensione_file);
                this.columnedificio = new DataColumn("edificio", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnedificio);
                this.columndata_completamento_init = new DataColumn("data_completamento_init", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndata_completamento_init);
                this.columnintervallo_odl_selezionati = new DataColumn("intervallo_odl_selezionati", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnintervallo_odl_selezionati);
                this.columntipologia_report = new DataColumn("tipologia_report", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columntipologia_report);
                this.columnid = new DataColumn("id", typeof(long), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnid);
                this.columndimensione_file_zip = new DataColumn("dimensione_file_zip", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columndimensione_file_zip);
                this.columnDATA_ASS_IN_OUT = new DataColumn("DATA_ASS_IN_OUT", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDATA_ASS_IN_OUT);
                this.columnDIMENSIONEFILE_PDF_ZIP = new DataColumn("DIMENSIONEFILE_PDF_ZIP", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDIMENSIONEFILE_PDF_ZIP);
                this.columnCOMPLETATE = new DataColumn("COMPLETATE", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnCOMPLETATE);
            }
            
            public DownloadFileRow NewDownloadFileRow() {
                return ((DownloadFileRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new DownloadFileRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(DownloadFileRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DownloadFileRowChanged != null)) {
                    this.DownloadFileRowChanged(this, new DownloadFileRowChangeEvent(((DownloadFileRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DownloadFileRowChanging != null)) {
                    this.DownloadFileRowChanging(this, new DownloadFileRowChangeEvent(((DownloadFileRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DownloadFileRowDeleted != null)) {
                    this.DownloadFileRowDeleted(this, new DownloadFileRowChangeEvent(((DownloadFileRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DownloadFileRowDeleting != null)) {
                    this.DownloadFileRowDeleting(this, new DownloadFileRowChangeEvent(((DownloadFileRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveDownloadFileRow(DownloadFileRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DownloadFileRow : DataRow {
            
            private DownloadFileDataTable tableDownloadFile;
            
            internal DownloadFileRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableDownloadFile = ((DownloadFileDataTable)(this.Table));
            }
            
            public string nome_file {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.nome_fileColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.nome_fileColumn] = value;
                }
            }
            
            public System.DateTime data_created {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableDownloadFile.data_createdColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.data_createdColumn] = value;
                }
            }
            
            public System.DateTime data_assegnazione_init {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableDownloadFile.data_assegnazione_initColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.data_assegnazione_initColumn] = value;
                }
            }
            
            public System.DateTime data_assegnazione_end {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableDownloadFile.data_assegnazione_endColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.data_assegnazione_endColumn] = value;
                }
            }
            
            public System.DateTime data_completamento_end {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableDownloadFile.data_completamento_endColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.data_completamento_endColumn] = value;
                }
            }
            
            public string comune {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.comuneColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.comuneColumn] = value;
                }
            }
            
            public string ditta {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.dittaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.dittaColumn] = value;
                }
            }
            
            public string categoria {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.categoriaColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.categoriaColumn] = value;
                }
            }
            
            public string addetto {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.addettoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.addettoColumn] = value;
                }
            }
            
            public string solo_non_completate {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.solo_non_completateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.solo_non_completateColumn] = value;
                }
            }
            
            public string solo_completate {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.solo_completateColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.solo_completateColumn] = value;
                }
            }
            
            public string data_di_completamento {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.data_di_completamentoColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.data_di_completamentoColumn] = value;
                }
            }
            
            public string dimensione_file {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.dimensione_fileColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.dimensione_fileColumn] = value;
                }
            }
            
            public string edificio {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.edificioColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.edificioColumn] = value;
                }
            }
            
            public System.DateTime data_completamento_init {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableDownloadFile.data_completamento_initColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.data_completamento_initColumn] = value;
                }
            }
            
            public string intervallo_odl_selezionati {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.intervallo_odl_selezionatiColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.intervallo_odl_selezionatiColumn] = value;
                }
            }
            
            public string tipologia_report {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.tipologia_reportColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.tipologia_reportColumn] = value;
                }
            }
            
            public long id {
                get {
                    try {
                        return ((long)(this[this.tableDownloadFile.idColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.idColumn] = value;
                }
            }
            
            public string dimensione_file_zip {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.dimensione_file_zipColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.dimensione_file_zipColumn] = value;
                }
            }
            
            public string DATA_ASS_IN_OUT {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.DATA_ASS_IN_OUTColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.DATA_ASS_IN_OUTColumn] = value;
                }
            }
            
            public string DIMENSIONEFILE_PDF_ZIP {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.DIMENSIONEFILE_PDF_ZIPColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.DIMENSIONEFILE_PDF_ZIPColumn] = value;
                }
            }
            
            public string COMPLETATE {
                get {
                    try {
                        return ((string)(this[this.tableDownloadFile.COMPLETATEColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDownloadFile.COMPLETATEColumn] = value;
                }
            }
            
            public bool Isnome_fileNull() {
                return this.IsNull(this.tableDownloadFile.nome_fileColumn);
            }
            
            public void Setnome_fileNull() {
                this[this.tableDownloadFile.nome_fileColumn] = System.Convert.DBNull;
            }
            
            public bool Isdata_createdNull() {
                return this.IsNull(this.tableDownloadFile.data_createdColumn);
            }
            
            public void Setdata_createdNull() {
                this[this.tableDownloadFile.data_createdColumn] = System.Convert.DBNull;
            }
            
            public bool Isdata_assegnazione_initNull() {
                return this.IsNull(this.tableDownloadFile.data_assegnazione_initColumn);
            }
            
            public void Setdata_assegnazione_initNull() {
                this[this.tableDownloadFile.data_assegnazione_initColumn] = System.Convert.DBNull;
            }
            
            public bool Isdata_assegnazione_endNull() {
                return this.IsNull(this.tableDownloadFile.data_assegnazione_endColumn);
            }
            
            public void Setdata_assegnazione_endNull() {
                this[this.tableDownloadFile.data_assegnazione_endColumn] = System.Convert.DBNull;
            }
            
            public bool Isdata_completamento_endNull() {
                return this.IsNull(this.tableDownloadFile.data_completamento_endColumn);
            }
            
            public void Setdata_completamento_endNull() {
                this[this.tableDownloadFile.data_completamento_endColumn] = System.Convert.DBNull;
            }
            
            public bool IscomuneNull() {
                return this.IsNull(this.tableDownloadFile.comuneColumn);
            }
            
            public void SetcomuneNull() {
                this[this.tableDownloadFile.comuneColumn] = System.Convert.DBNull;
            }
            
            public bool IsdittaNull() {
                return this.IsNull(this.tableDownloadFile.dittaColumn);
            }
            
            public void SetdittaNull() {
                this[this.tableDownloadFile.dittaColumn] = System.Convert.DBNull;
            }
            
            public bool IscategoriaNull() {
                return this.IsNull(this.tableDownloadFile.categoriaColumn);
            }
            
            public void SetcategoriaNull() {
                this[this.tableDownloadFile.categoriaColumn] = System.Convert.DBNull;
            }
            
            public bool IsaddettoNull() {
                return this.IsNull(this.tableDownloadFile.addettoColumn);
            }
            
            public void SetaddettoNull() {
                this[this.tableDownloadFile.addettoColumn] = System.Convert.DBNull;
            }
            
            public bool Issolo_non_completateNull() {
                return this.IsNull(this.tableDownloadFile.solo_non_completateColumn);
            }
            
            public void Setsolo_non_completateNull() {
                this[this.tableDownloadFile.solo_non_completateColumn] = System.Convert.DBNull;
            }
            
            public bool Issolo_completateNull() {
                return this.IsNull(this.tableDownloadFile.solo_completateColumn);
            }
            
            public void Setsolo_completateNull() {
                this[this.tableDownloadFile.solo_completateColumn] = System.Convert.DBNull;
            }
            
            public bool Isdata_di_completamentoNull() {
                return this.IsNull(this.tableDownloadFile.data_di_completamentoColumn);
            }
            
            public void Setdata_di_completamentoNull() {
                this[this.tableDownloadFile.data_di_completamentoColumn] = System.Convert.DBNull;
            }
            
            public bool Isdimensione_fileNull() {
                return this.IsNull(this.tableDownloadFile.dimensione_fileColumn);
            }
            
            public void Setdimensione_fileNull() {
                this[this.tableDownloadFile.dimensione_fileColumn] = System.Convert.DBNull;
            }
            
            public bool IsedificioNull() {
                return this.IsNull(this.tableDownloadFile.edificioColumn);
            }
            
            public void SetedificioNull() {
                this[this.tableDownloadFile.edificioColumn] = System.Convert.DBNull;
            }
            
            public bool Isdata_completamento_initNull() {
                return this.IsNull(this.tableDownloadFile.data_completamento_initColumn);
            }
            
            public void Setdata_completamento_initNull() {
                this[this.tableDownloadFile.data_completamento_initColumn] = System.Convert.DBNull;
            }
            
            public bool Isintervallo_odl_selezionatiNull() {
                return this.IsNull(this.tableDownloadFile.intervallo_odl_selezionatiColumn);
            }
            
            public void Setintervallo_odl_selezionatiNull() {
                this[this.tableDownloadFile.intervallo_odl_selezionatiColumn] = System.Convert.DBNull;
            }
            
            public bool Istipologia_reportNull() {
                return this.IsNull(this.tableDownloadFile.tipologia_reportColumn);
            }
            
            public void Settipologia_reportNull() {
                this[this.tableDownloadFile.tipologia_reportColumn] = System.Convert.DBNull;
            }
            
            public bool IsidNull() {
                return this.IsNull(this.tableDownloadFile.idColumn);
            }
            
            public void SetidNull() {
                this[this.tableDownloadFile.idColumn] = System.Convert.DBNull;
            }
            
            public bool Isdimensione_file_zipNull() {
                return this.IsNull(this.tableDownloadFile.dimensione_file_zipColumn);
            }
            
            public void Setdimensione_file_zipNull() {
                this[this.tableDownloadFile.dimensione_file_zipColumn] = System.Convert.DBNull;
            }
            
            public bool IsDATA_ASS_IN_OUTNull() {
                return this.IsNull(this.tableDownloadFile.DATA_ASS_IN_OUTColumn);
            }
            
            public void SetDATA_ASS_IN_OUTNull() {
                this[this.tableDownloadFile.DATA_ASS_IN_OUTColumn] = System.Convert.DBNull;
            }
            
            public bool IsDIMENSIONEFILE_PDF_ZIPNull() {
                return this.IsNull(this.tableDownloadFile.DIMENSIONEFILE_PDF_ZIPColumn);
            }
            
            public void SetDIMENSIONEFILE_PDF_ZIPNull() {
                this[this.tableDownloadFile.DIMENSIONEFILE_PDF_ZIPColumn] = System.Convert.DBNull;
            }
            
            public bool IsCOMPLETATENull() {
                return this.IsNull(this.tableDownloadFile.COMPLETATEColumn);
            }
            
            public void SetCOMPLETATENull() {
                this[this.tableDownloadFile.COMPLETATEColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DownloadFileRowChangeEvent : EventArgs {
            
            private DownloadFileRow eventRow;
            
            private DataRowAction eventAction;
            
            public DownloadFileRowChangeEvent(DownloadFileRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public DownloadFileRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
